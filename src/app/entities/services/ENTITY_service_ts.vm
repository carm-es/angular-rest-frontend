#parse("include/entitiesNamesRef.vm")
// File generated by $generator.name ( version $generator.version ) - Date $today.date("yyyy-MM-dd") ( Time $today.time )

import { GenericService } from './../../../services/generic.service';
import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { $entity.name } from '../$fn.uncapitalize($LCentityNameModel)';
import { Configuration } from '../../../app.configuration';

@Injectable()
export class $baseServiceName extends GenericService<${entity.name}>  {

    /**
     * Constructor
     * @param _http Http
     * @param _configuration Configuration
     */
    constructor(_http: HttpClient, _configuration: Configuration) {
        super(_http, _configuration, '$fn.uncapitalize($entity.name)');
    }

    /**
    * Returns an initialized object
    * @return object type T ArticuloIniciativa
    */
    public getInitializedObject(): $entity.name{
        return {
#foreach ( $attrib in $entity.attributes)
#if ($foreach.count < $entity.attributes.size())
#if ($attrib.isStringType()) 
                ${attrib.name}: "", 
#elseif ($attrib.isNumberType())
                ${attrib.name}: 0,
#elseif ($attrib.isTemporalType())
                ${attrib.name}: new Date(),
#else
                ${attrib.name}: null, 
#end
#else
#if ($attrib.isStringType()) 
                ${attrib.name}: "" 
#elseif ($attrib.isNumberType())
                ${attrib.name}: 0
#elseif ($attrib.isTemporalType())
                ${attrib.name}: new Date()
#else
                ${attrib.name}: null 
#end
#end
#end
               };
    }  

}
