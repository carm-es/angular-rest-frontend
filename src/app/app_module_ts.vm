// File generated by $generator.name ( version $generator.version ) - Date $today.date("yyyy-MM-dd") ( Time $today.time )

import { BrowserModule } from '@angular/platform-browser';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { HttpClientModule } from '@angular/common/http';
import { AppComponent } from './app.component';

// Routing
import { routing } from './app.routing';
#foreach ($entity in $selectedEntities)
#set ( $listComponentName = $entity.name + "ListComponent" )
#set ( $formComponentName = $entity.name + "FormComponent" )
#set ( $LCentityName = $fn.uncapitalize($entity.name) ) 
#set ( $listComponentPath = "./entities/" + $LCentityName + "/" + $LCentityName + "-list/" + $LCentityName + "-list.component" )
#set ( $formComponentPath = "./entities/" + $LCentityName + "/" + $LCentityName + "-form/" + $LCentityName + "-form.component" )

// $entity.name Components
import { $listComponentName } from '$listComponentPath';
import { $formComponentName } from '$formComponentPath';
#end 

// Other Components
import { NotFoundComponent } from './not-found/not-found.component';
import { AboutComponent } from './about/about.component';
import { DeleteDialogComponent } from './delete-dialog/delete-dialog.component';
import { HomeListComponent } from './home-list/home-list.component';

// Modules Angular
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

// Modules Angular Material
import { MatGridListModule } from '@angular/material/grid-list';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatSelectModule } from '@angular/material/select';
import { MatIconModule } from '@angular/material/icon';
import { MatDialogModule } from '@angular/material/dialog';
import { MatInputModule } from '@angular/material/input';
import { MatButtonModule } from '@angular/material/button';
import { MatProgressBarModule } from '@angular/material/progress-bar';

// Modules PrimeNG
import { InputTextModule } from 'primeng/inputtext';
import { ButtonModule } from 'primeng/button';
import { CardModule } from 'primeng/card';
import { CalendarModule } from 'primeng/calendar';
import { InputNumberModule } from 'primeng/inputnumber';
import { DropdownModule } from 'primeng/dropdown';
import { MenubarModule } from 'primeng/menubar';

// Services
import { Configuration } from './app.configuration';
#foreach ($entity in $selectedEntities)
#set ( $baseServiceName = $entity.name + "Service" )
#set ( $LCentityName = $fn.uncapitalize($entity.name) )
#set ( $baseServicePath = "./entities/" + $LCentityName + "/services/" + $LCentityName + ".service" )
import { $baseServiceName } from '$baseServicePath';
#end
import { EmitterService } from './services/emitter.service';
import { NotifierModule } from 'angular-notifier';
import { NotificationService } from './services/notification.service';
import { PagerService } from './services/pager.service';

@NgModule({
  declarations: [
    AppComponent,
#foreach ($entity in $selectedEntities)
    ${entity.name}ListComponent,
    ${entity.name}FormComponent,
#end 
    NotFoundComponent,
    AboutComponent,
    DeleteDialogComponent,
    HomeListComponent
  ],
  imports: [
    BrowserModule,
    FormsModule,
    CommonModule,
    ReactiveFormsModule,
    HttpClientModule,
    routing,
    BrowserAnimationsModule,
    NotifierModule,
    MatGridListModule,
    MatFormFieldModule,
    MatDatepickerModule,
    MatSelectModule,
    MatIconModule,
    MatDialogModule,
    MatInputModule,
    MatButtonModule,
    MatProgressBarModule,
    InputTextModule,
    ButtonModule,
    CardModule,
    CalendarModule,
    InputNumberModule,
    DropdownModule,
    MenubarModule
  ],
  providers: [
#foreach ($entity in $selectedEntities)
    ${entity.name}Service,
#end
    Configuration,
    EmitterService,
    NotificationService,
    PagerService
  ],
  bootstrap: [AppComponent]
})
export class AppModule { }
